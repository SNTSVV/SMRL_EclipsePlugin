import static smrl.mr.language.Operations.*
import smrl.mr.language.Action;

package smrl.mr.owasp {
	
  /**
   * A URL that cannot be reached by a user while navigating the user interface should not 
   * be available to that same user even when she directly requests the URL to the server. 
   * For this reason, an input sequence that is valid for a given user, should not lead to 
   * the same output when it is executed by another user, if it includes access to a URL with 
   * these characteristics.
   * 
   * The metamorphic relation iterates over all the actions of an input sequence.
   * 
   * The 1st parameter of IMPLIES is made of three clauses.
   * The 1st clause checks whether the user in User() is not a supervisor of the user performing the current action.
   * The 2nd clause verifies that the user cannot retrieve the URL of the action through the GUI 
   * (based on the data collected by the crawler).
   * The 3rd clause defines a follow-up input that matches the source input except that the credentials
   * of User() are used in this case.
   * 
   * The 2nd parameter of IMPLIES verifies the result. It is implemented as an OR operation where 
   * The 1st parameter verifies that the follow-up input leads to an error page. 
   * The 2nd parameter verifies that the output generated by the action containing the URL 
   * indicated above leads to two different outputs in the two cases.
   *  	
   */	 
  MR OTG_AUTHZ_002 {
   { 
     for ( Action action : Input(1).actions() ){
	   IMPLIES(
	   	 (!isSupervisorOf(User(), action.user)) &&						//1st par
	     cannotReachThroughGUI( User(), action.url )    				// 
	     	&&   EQUAL( Input(2), changeCredentials(Input(1), User()) ) //of IMPLIES
		 ,
		 OR(
		 	isError(Output(Input(1),action.position)), 										//2nd par
		 	NOT( Output(Input(1),action.position).equals(Output(Input(2),action.position))) //of IMPLIES
	   )); //end-IMPLIES
	   
     } //end-for
     
   } 
 } //end-MR
}//end-package