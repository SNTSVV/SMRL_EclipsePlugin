import static smrl.mr.language.Operations.*;
import smrl.mr.language.Action;

package smrl.mr.owasp{

/**
 * 
 * By randomly changing the parameter values passed to URLs, a user should not be able to retrieve content
 * she cannot retrieve from GUI.
 * 
 * The first loop iterates over all the actions of the input sequence. 
 * The second iterates over all the parameters of the action.
 * 
 * The 1st parameter of the operator IMPLIES is a boolean expression with two clauses joined with logical conjunctions. 
 * The 1st clause defines the follow-up input. 
 * The 2nd clause set a parameter value to a random value.
 *
 * The 2nd parameter of IMPLIES checks if the content of the output generated by the login operation 
 * is either an error message or some content that can be retrieved from the GUI.
 */ 
	MR OTG_AUTHZ_004 {
		{
			for ( Action action : Input(1).actions() ){
				for ( var par=0; par < action.getParameters().size(); par++ ){ 
					var pos = action.getPosition();
					IMPLIES( 
						EQUAL ( Input(2), Input(1) ) &&	//1st par of IMPLIES (1st clause)
					  	Input(2).actions().get(pos)		//1st par of IMPLIES (2nd clause)
							.setParameterValue(par, parameterValueUsedByOtherUsers(action, par)) 
							//TODO: optimization -> return only param_value of this action 
						, 
						OR( 							//2nd par of IMPLIES
							Output(Input(2),pos).isError()
							, 
							userCanRetrieveContent( action.user, Output(Input(2),pos) ) 
						)
					);//end-IMPLIES
				}//end-for
			}//end-for
		}
	}//end-MR
}
