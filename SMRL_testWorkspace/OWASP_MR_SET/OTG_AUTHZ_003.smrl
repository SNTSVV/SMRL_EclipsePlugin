import static smrl.mr.language.Operations.*;
import smrl.mr.language.Action;

package smrl.mr.owasp{

/**
 * 
 * If an action is not expected to be executed by a user 'u' (because is not available in his GUI),
 * then user 'u' should not be able to execute that action even if he changes the user id parameter
 * in that action (i.e., the action should lead to different results when executed by a valid and 
 * invalid user).
 * 
 * The first loop iterates over all the actions of the input sequence. 
 * The second iterates over all the parameters of the action to identify a parameter that 
 * specifies the user id.
 * 
 * The 1st parameter of the operator IMPLIES is a boolean expression with four clauses 
 * joined with logical conjunctions. 
 * The 1st clause checks if the current action contains a user ID. 
 * The 2nd clause defines the follow-up input as a copy of the source input.
 * The 3rd clause changes the user ID to the one of User
 * The 4th clause changes the login credentials of the follow-up input to the one of User 
 * 
 * The 2nd parameter of IMPLIES checks if the output generated by the action
 * is different in the two cases.
 */ 
MR OTG_AUTHZ_003 {
	{
		for ( Action action : Input(1).actions() ){
			for ( var par=0; par < action.getParameters().size(); par++ ){ 
				var pos = action.getPosition();
				IMPLIES ( isUserIdParameter(action,par,action.getUser() )
					&& ( equal ( Input(2), Input(1) )
					&& Input(2).actions().get(pos).setParameterValue(par,User()) )
					&& equal ( Input(3), changeCredentials( Input(1), User() ) )
					, different ( Output(Input(2),pos),  Output(Input(3),pos) ) )
			}
		}
	}
}
}





