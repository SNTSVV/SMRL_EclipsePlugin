import static smrl.mr.language.Operations.*

package smrl.mr.owasp {

 /**
 * 
 * A user should not be able to overwrite an admin file by writing its path in a file form.
 * 
 * The first loop iterates over all the actions of an input sequence.
 * The second loop looks for an action that contains a form that appear to be used to specify paths.
 * 
 * The 1st parameter of IMPLIES is made of four clauses.
 * The 1st clause verifies that the follow-up user is not an admin (admin may access any file).
 * The 2nd clause verifies that the selected text input in a form contains a file path (or a file name).
 * The 3rd clause verifies defines a follow-up input that is a copy of the source input.
 * The 4th clause puts a randomly selected path of an admin file in the selected form input of the follow-up sequence.
 * 
 * The 2nd parameter of IMPLIES verifies the result. It is implemented as an OR operation where
 * The 1st parameter checks if the y-th action from the source input leads to an error page.
 * The 2nd parameter verifies if the output generated by sequence containing the path to the admin file
 * is different than the output of the sequence performed by the original user. We do not check only
 * for the output of action x because the error might be observed afterwards (e.g., during execution).
 * 
 */ 
  MR OTG_AUTHZ_002d {
  	{
		for ( var x=0; Input(1).containFormInputForFilePath() && x<Input(1).actions().size; x++) {
			var action = Input(1).actions.get(x);
			var randomPath = RandomAdminFilePath();
			var formInputs = action.formInputs;
			for(var i=0; action.containFormInputForFilePath() && i< formInputs.size(); i++){
				var formInput = action.getFormInputs().get(i).getAsJsonObject();
				
				IMPLIES(
					//1st par of IMPLIES including 4 clauses
					! isAdmin(action.user) &&  
					isFormInputForFilePath( formInput ) &&
					EQUAL(Input(2), Input(1)) &&
					updateStringFormInput(Input(2).actions.get(x).getFormInputs().get(i).getAsJsonObject(), randomPath)
					,	
					//2nd par of IMPLIES
					OR(
						isError(Output(Input(1))),
						different(
							Output(Input(1)),
							Output(Input(2))
						)
					)
	  			); //end-IMPLIES
  			} //end-for
		} //end-for
    }
  } //end-MR
} //end-package